<!--
    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
    the MIT License. See LICENSE in the project root for license information.
-->
<Page x:Class="Microsoft.Terminal.Settings.Editor.Profiles_Base"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Microsoft.Terminal.Settings.Editor"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:model="using:Microsoft.Terminal.Settings.Model"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="EnumComboBoxTemplate"
                          x:DataType="local:EnumEntry">
                <TextBlock Text="{x:Bind EnumName, Mode=OneWay}" />
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <!--  Use a Grid instead of a StackPanel. StackPanel suppresses the inner ScrollViewer.  -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock x:Uid="Profile_BaseLayerDisclaimer"
                   Grid.Row="0"
                   Margin="{StaticResource StandardIndentMargin}"
                   Style="{StaticResource DisclaimerStyle}"
                   Visibility="{x:Bind Profile.IsBaseLayer}" />
        <ScrollViewer Name="ProfilesBase_ScrollView"
                      Grid.Row="1"
                      ViewChanging="ViewChanging">
            <StackPanel Style="{StaticResource SettingsStackStyle}">

                <!--  Name  -->
                <!--
                    NOTE: Has/Clear is not bound because we don't want the reset button & override text to appear.
                    Additionally, the JSON stubs generated by auto-generated profiles come with a name,
                    so the name will always be overridden.
                -->
                <local:SettingContainer x:Uid="Profile_Name"
                                        CurrentValue="{x:Bind Profile.Name, Mode=OneWay}"
                                        Style="{StaticResource ExpanderSettingContainerStyle}"
                                        Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(Profile.IsBaseLayer), Mode=OneWay}">
                    <TextBox Style="{StaticResource TextBoxSettingStyle}"
                             Text="{x:Bind Profile.Name, Mode=TwoWay}" />
                </local:SettingContainer>

                <!--  Commandline  -->
                <local:SettingContainer x:Name="CommandlineContainer"
                                        x:Uid="Profile_Commandline"
                                        ClearSettingValue="{x:Bind Profile.ClearCommandline}"
                                        CurrentValue="{x:Bind Profile.Commandline, Mode=OneWay}"
                                        HasSettingValue="{x:Bind Profile.HasCommandline, Mode=OneWay}"
                                        SettingOverrideSource="{x:Bind Profile.CommandlineOverrideSource, Mode=OneWay}"
                                        Style="{StaticResource ExpanderSettingContainerStyle}"
                                        Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(Profile.IsBaseLayer), Mode=OneWay}">
                    <StackPanel>
                        <TextBox x:Uid="Profile_CommandlineBox"
                                 IsSpellCheckEnabled="False"
                                 Style="{StaticResource TextBoxSettingStyle}"
                                 Text="{x:Bind Profile.Commandline, Mode=TwoWay}" />
                        <Button x:Uid="Profile_CommandlineBrowse"
                                Margin="0,10,0,0"
                                Click="Commandline_Click"
                                Style="{StaticResource BrowseButtonStyle}" />
                    </StackPanel>
                </local:SettingContainer>

                <!--  Starting Directory  -->
                <local:SettingContainer x:Name="StartingDirectoryContainer"
                                        x:Uid="Profile_StartingDirectory"
                                        ClearSettingValue="{x:Bind Profile.ClearStartingDirectory}"
                                        CurrentValue="{x:Bind Profile.StartingDirectory, Mode=OneWay}"
                                        HasSettingValue="{x:Bind Profile.HasStartingDirectory, Mode=OneWay}"
                                        SettingOverrideSource="{x:Bind Profile.StartingDirectoryOverrideSource, Mode=OneWay}"
                                        Style="{StaticResource ExpanderSettingContainerStyle}">
                    <StackPanel Orientation="Vertical">
                        <TextBox x:Uid="Profile_StartingDirectoryBox"
                                 IsEnabled="{x:Bind Profile.UseCustomStartingDirectory, Mode=OneWay}"
                                 IsSpellCheckEnabled="False"
                                 Style="{StaticResource TextBoxSettingStyle}"
                                 Text="{x:Bind Profile.StartingDirectory, Mode=TwoWay}" />
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="StartingDirectoryBrowse"
                                    x:Uid="Profile_StartingDirectoryBrowse"
                                    Margin="0,10,10,0"
                                    Click="StartingDirectory_Click"
                                    IsEnabled="{x:Bind Profile.UseCustomStartingDirectory, Mode=OneWay}"
                                    Style="{StaticResource BrowseButtonStyle}" />
                            <CheckBox x:Name="StartingDirectoryUseParentCheckbox"
                                      x:Uid="Profile_StartingDirectoryUseParentCheckbox"
                                      Margin="0,5,0,0"
                                      IsChecked="{x:Bind Profile.UseParentProcessDirectory, Mode=TwoWay}" />
                        </StackPanel>
                    </StackPanel>
                </local:SettingContainer>

                <!--  Icon  -->
                <local:SettingContainer x:Uid="Profile_Icon"
                                        ClearSettingValue="{x:Bind Profile.ClearIcon}"
                                        CurrentValue="{x:Bind Profile.Icon, Mode=OneWay}"
                                        HasSettingValue="{x:Bind Profile.HasIcon, Mode=OneWay}"
                                        SettingOverrideSource="{x:Bind Profile.IconOverrideSource, Mode=OneWay}"
                                        Style="{StaticResource ExpanderSettingContainerStyle}">
                    <StackPanel>
                        <TextBox x:Uid="Profile_IconBox"
                                 FontFamily="Segoe UI, Segoe Fluent Icons, Segoe MDL2 Assets"
                                 IsSpellCheckEnabled="False"
                                 Style="{StaticResource TextBoxSettingStyle}"
                                 Text="{x:Bind Profile.Icon, Mode=TwoWay}" />
                        <Button x:Uid="Profile_IconBrowse"
                                Margin="0,10,0,0"
                                Click="Icon_Click"
                                Style="{StaticResource BrowseButtonStyle}" />
                    </StackPanel>
                </local:SettingContainer>

                <!--  Tab Title  -->
                <local:SettingContainer x:Uid="Profile_TabTitle"
                                        ClearSettingValue="{x:Bind Profile.ClearTabTitle}"
                                        CurrentValue="{x:Bind Profile.TabTitle, Mode=OneWay}"
                                        HasSettingValue="{x:Bind Profile.HasTabTitle, Mode=OneWay}"
                                        SettingOverrideSource="{x:Bind Profile.TabTitleOverrideSource, Mode=OneWay}"
                                        Style="{StaticResource ExpanderSettingContainerStyle}">
                    <TextBox Style="{StaticResource TextBoxSettingStyle}"
                             Text="{x:Bind Profile.TabTitle, Mode=TwoWay}" />
                </local:SettingContainer>

                <!--  Elevate  -->
                <local:SettingContainer x:Uid="Profile_Elevate"
                                        ClearSettingValue="{x:Bind Profile.ClearElevate}"
                                        HasSettingValue="{x:Bind Profile.HasElevate, Mode=OneWay}"
                                        SettingOverrideSource="{x:Bind Profile.ElevateOverrideSource, Mode=OneWay}">
                    <ToggleSwitch IsOn="{x:Bind Profile.Elevate, Mode=TwoWay}"
                                  Style="{StaticResource ToggleSwitchInExpanderStyle}" />
                </local:SettingContainer>

                <!--  Hidden  -->
                <local:SettingContainer x:Uid="Profile_Hidden"
                                        Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(Profile.IsBaseLayer), Mode=OneWay}">
                    <ToggleSwitch IsOn="{x:Bind Profile.Hidden, Mode=TwoWay}"
                                  Style="{StaticResource ToggleSwitchInExpanderStyle}" />
                </local:SettingContainer>

                <!--  serial connects  -->
                <TextBlock x:Uid="Profile_BuiltInSettingsHeader"
                           Margin="0,48,0,0"
                           Style="{StaticResource TextBlockSubHeaderStyle}" />
                
                <local:SettingContainer x:Name="SerialContainer"
                                        x:Uid="Profile_Serial"
                                        Style="{StaticResource ExpanderSettingContainerStyle}"
                                        Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(Profile.IsBaseLayer), Mode=OneWay}">
                    <Grid RowSpacing="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Use the built-in Serial program"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ToggleSwitch x:Name="SerialToggle"
                                      Grid.Row="0"
                                      Grid.Column="1"
                                      IsOn="{x:Bind Profile.SerialEnable, Mode=TwoWay}"
                                      Style="{StaticResource ToggleSwitchInExpanderStyle}" />
                        
                        <!--avail port-->
                        <TextBlock Text="Port"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ComboBox x:Name="Serial"
                                  AutomationProperties.AccessibilityView="Content"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  DropDownOpened="{x:Bind Profile.Serial_DropDownOpened}"
                                  ItemsSource="{x:Bind Profile.SerialList, Mode=OneWay}"
                                  SelectedItem="{x:Bind Profile.CurrentSerial, Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxSettingStyle}" />

                        <!--speed-->
                        <TextBlock Text="Bound rate"
                                   Grid.Row="2"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ComboBox AutomationProperties.AccessibilityView="Content"
                                  Grid.Row="2"
                                  Grid.Column="1"
                                  ItemTemplate="{StaticResource EnumComboBoxTemplate}"
                                  ItemsSource="{x:Bind Profile.BoundRateList}"
                                  SelectedItem="{x:Bind Profile.CurrentBoundRate, Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxSettingStyle}" />

                        <!--data width-->
                        <TextBlock Text="Data bits width"
                                   Grid.Row="3"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ComboBox AutomationProperties.AccessibilityView="Content"
                                  Grid.Row="3"
                                  Grid.Column="1"
                                  ItemTemplate="{StaticResource EnumComboBoxTemplate}"
                                  ItemsSource="{x:Bind Profile.DataWidthList}"
                                  SelectedItem="{x:Bind Profile.CurrentDataWidth, Mode=TwoWay}"                                  
                                  Style="{StaticResource ComboBoxSettingStyle}" />

                        <!--check bit-->
                        <TextBlock Text="Check bits"
                                   Grid.Row="4"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ComboBox AutomationProperties.AccessibilityView="Content"
                                  Grid.Row="4"
                                  Grid.Column="1"
                                  ItemTemplate="{StaticResource EnumComboBoxTemplate}"
                                  ItemsSource="{x:Bind Profile.CheckBitList}"
                                  SelectedItem="{x:Bind Profile.CurrentCheckBit, Mode=TwoWay}"                                    
                                  Style="{StaticResource ComboBoxSettingStyle}" />

                        <!--stop bit-->
                        <TextBlock Text="Stop bits"
                                   Grid.Row="5"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ComboBox AutomationProperties.AccessibilityView="Content"
                                  Grid.Row="5"
                                  Grid.Column="1"
                                  ItemTemplate="{StaticResource EnumComboBoxTemplate}"
                                  ItemsSource="{x:Bind Profile.StopBitList}"
                                  SelectedItem="{x:Bind Profile.CurrentStopBit, Mode=TwoWay}"                                     
                                  Style="{StaticResource ComboBoxSettingStyle}" />

                        <!--flow control-->
                        <TextBlock Text="Flow controls"
                                   Grid.Row="6"
                                   Grid.Column="0"
                                   VerticalAlignment="Center" />
                        <ComboBox AutomationProperties.AccessibilityView="Content"
                                  Grid.Row="6"
                                  Grid.Column="1"
                                  ItemTemplate="{StaticResource EnumComboBoxTemplate}"
                                  ItemsSource="{x:Bind Profile.FlowControlList}"
                                  SelectedItem="{x:Bind Profile.CurrentFlowControl, Mode=TwoWay}"                                     
                                  Style="{StaticResource ComboBoxSettingStyle}" />
                    </Grid>
                </local:SettingContainer>
                
                <TextBlock x:Uid="Profile_AdditionalSettingsHeader"
                           Margin="0,48,0,0"
                           Style="{StaticResource TextBlockSubHeaderStyle}" />

                <Button x:Name="AppearanceNavigator"
                        Click="Appearance_Click"
                        Style="{StaticResource NavigatorButtonStyle}">
                    Appearance
                </Button>
                <Button x:Name="AdvancedNavigator"
                        Click="Advanced_Click"
                        Style="{StaticResource NavigatorButtonStyle}">
                    <TextBlock HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="Advanced" />
                </Button>
                <!--  Delete Button  -->
                <Border MaxWidth="{StaticResource StandardControlMaxWidth}">
                    <Button x:Name="DeleteButton"
                            Margin="{StaticResource StandardControlMargin}"
                            Style="{StaticResource DeleteButtonStyle}"
                            Visibility="{x:Bind Profile.CanDeleteProfile}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <FontIcon FontSize="{StaticResource StandardIconSize}"
                                          Glyph="&#xE74D;" />
                                <TextBlock x:Uid="Profile_DeleteButton"
                                           Margin="10,0,0,0" />
                            </StackPanel>
                        </Button.Content>
                        <Button.Flyout>
                            <Flyout>
                                <StackPanel>
                                    <TextBlock x:Uid="Profile_DeleteConfirmationMessage"
                                               Style="{StaticResource CustomFlyoutTextStyle}" />
                                    <Button x:Uid="Profile_DeleteConfirmationButton"
                                            Click="DeleteConfirmation_Click" />
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
